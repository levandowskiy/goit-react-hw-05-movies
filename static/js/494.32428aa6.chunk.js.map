{"version":3,"file":"static/js/494.32428aa6.chunk.js","mappings":"mOAoEA,EAhEqB,WAAO,IAAD,QACjBA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,SACxCC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OApBAC,EAAAA,EAAAA,YAAU,WACNC,MAAM,sCAAD,OAAuCR,EAAvC,8CACAS,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAO,IAAIC,MAAM,aACnC,IACAN,MAAK,SAACO,GACHZ,EAAeY,EAClB,IACAC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZG,MAAM,iBACT,IACAC,SAAQ,WACLhB,GAAW,EACd,GACR,GAAE,CAACN,KAGA,iBAAKuB,UAAU,sBAAf,WACI,SAAC,KAAD,CAAMC,GAAE,oBAAE9B,EAASI,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,8CACCM,GACG,sCAEAF,IACA,iBAAKoB,UAAU,eAAf,WACI,iBAAKA,UAAU,UAAf,WACI,gBAAKE,IA/BN,kCA+BwBtB,EAAYuB,YAAaC,IAAI,cACpD,iBAAKJ,UAAU,OAAf,WACI,wBAAKpB,EAAYyB,kBACjB,yCACgB,0BAAOC,KAAKC,MAAO3B,EAAY4B,aAAe,GAAM,KAAO,UAE3E,sCACA,uBAAI5B,EAAY6B,YAChB,oCACA,uBAAI7B,EAAY8B,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAChC,OAAO,4BAAgBD,EAAhB,MAAWC,EACrB,aAKT,mDACA,SAAC,KAAD,CAAMZ,GAAG,OAAO1B,MAAO,CAAEC,KAAMH,EAASyC,SAAxC,mBACA,SAAC,KAAD,CAAMb,GAAG,UAAU1B,MAAO,CAAEC,KAAMH,EAASyC,SAA3C,sBACA,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,WAMvB,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useState, useEffect, useRef } from 'react';\nimport './MovieDetails.css'\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? \"/dogs\");\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=31c7a05a32884484d4b383be2a7a18a3`)\n            .then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n                return Promise.reject(new Error(\"error 404\"))\n            })\n            .then((data) => {\n                setFilmDetails(data);\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(\"Film not found\")\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [movieId])\n\n    return (\n        <div className='wrapperMovieDetails'>\n            <Link to={location.state?.from ?? \"/\"}> Назад </Link>\n            {loading ?\n                <p>Loading...</p>\n                :\n                filmDetails &&\n                <div className='movieDetails'>\n                    <div className='details'>\n                        <img src={baseImgUrl + filmDetails.poster_path} alt=\"film img\" />\n                        <div className='info'>\n                            <h2>{filmDetails.original_title}</h2>\n                            <p>\n                                User Score: <span>{Math.round((filmDetails.vote_average / 10) * 100) + \"%\"}</span>\n                            </p>\n                            <h3>Overview</h3>\n                            <p>{filmDetails.overview}</p>\n                            <h4>Genres</h4>\n                            <p>{filmDetails.genres.map(({ name, id }) => {\n                                return <span key={id}>{name} </span>\n                            })\n                            }</p>\n                        </div>\n                    </div>\n\n                    <p>Additional information</p>\n                    <Link to=\"cast\" state={{ from: backLink.current }}>Cast</Link>\n                    <Link to=\"reviews\" state={{ from: backLink.current }}>Reviews</Link>\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Outlet />\n                    </Suspense>\n                </div>\n            }\n        </div>\n    );\n};\nexport default MovieDetails;"],"names":["location","useLocation","backLink","useRef","state","from","movieId","useParams","useState","filmDetails","setFilmDetails","loading","setLoading","useEffect","fetch","then","res","ok","json","Promise","reject","Error","data","catch","error","console","log","alert","finally","className","to","src","poster_path","alt","original_title","Math","round","vote_average","overview","genres","map","name","id","current","Suspense","fallback"],"sourceRoot":""}
{"version":3,"file":"static/js/278.f58133b8.chunk.js","mappings":"6LA2FA,UAxFe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BT,EAAAA,EAAAA,WAAS,GAAvC,eAAOU,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACJJ,EAAaK,IAAI,UACnBT,EAAeI,EAAaK,IAAI,SAEnC,GAAE,CAACL,KAGJI,EAAAA,EAAAA,YAAU,WACY,KAAhBT,IAIJM,EAAgB,CAAEK,MAAOX,IAEzBY,EAAYZ,GACb,GAAE,CAACA,EAAaM,IAEjB,IAAMM,EAAc,SAACZ,GACnBa,MAAM,4FAAD,OAA6Fb,IAC/Fc,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACLd,EAAcc,EAAKC,QACpB,IACAC,SAAQ,WACPX,GAAW,EACZ,GACJ,EAmBD,OACE,iCACE,kBAAMY,SAnBU,SAACC,GACnBA,EAAEC,iBAEwB,KAAtBxB,EAAWyB,QAIff,GAAW,GACXP,EAAeH,GAEfC,EAAc,KANZyB,MAAM,2GAOT,EAQgCC,UAAU,OAAvC,WACE,mBAAQC,KAAK,SAASD,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,uBAGF,kBACEA,UAAU,QACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAO/B,EACPgC,YAAY,2BACZC,SAlBa,SAACV,GACpBtB,EAAcsB,EAAEW,cAAcH,MAC/B,QAmBG,0BACGtB,GACC,sCAEAL,GACAA,EAAW+B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpB,OAAO,yBACL,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM3C,GAAlC,SAA+CwC,KADjCD,EAGjB,IAEFhC,GAAoC,IAAtBA,EAAWqC,SACxB,gOAKT,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useLocation, Link, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Movies = () => {\n  const location = useLocation()\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchFilm, setSearchFilm] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (searchParams.get(\"query\")) {\n      setSearchValue(searchParams.get(\"query\"))\n    }\n  }, [searchParams])\n\n\n  useEffect(() => {\n    if (searchValue === \"\") {\n      return\n    }\n\n    setSearchParams({ query: searchValue })\n\n    fetchMovies(searchValue);\n  }, [searchValue, setSearchParams])\n\n  const fetchMovies = (searchValue) => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=31c7a05a32884484d4b383be2a7a18a3&query=${searchValue}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setSearchFilm(data.results);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  const handlerForm = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim() === \"\") {\n      alert(\"Поле пошуку порожне\")\n      return;\n    }\n    setLoading(true)\n    setSearchValue(inputValue);\n\n    setInputValue(\"\");\n  }\n\n  const handlerInput = (e) => {\n    setInputValue(e.currentTarget.value)\n  }\n\n  return (\n    <>\n      <form onSubmit={handlerForm} className=\"form\">\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          placeholder=\"Search images and photos\"\n          onChange={handlerInput}\n        />\n      </form>\n      <ul>\n        {loading ?\n          <p>Loading...</p>\n          :\n          searchFilm &&\n          searchFilm.map(({ id, title }) => {\n            return <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>{title}</Link>\n            </li>\n          })\n        }\n        {searchFilm && searchFilm.length === 0 && (\n          <p>Нічого не знайдено для даного запиту</p>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Movies;"],"names":["location","useLocation","useState","inputValue","setInputValue","searchValue","setSearchValue","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","loading","setLoading","useEffect","get","query","fetchMovies","fetch","then","response","json","data","results","finally","onSubmit","e","preventDefault","trim","alert","className","type","autoComplete","autoFocus","value","placeholder","onChange","currentTarget","map","id","title","to","state","from","length"],"sourceRoot":""}